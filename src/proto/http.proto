package polar_express;

// Next tag: 3
message KeyValue {
  optional string key = 1;
  optional string value = 2;
};

// Http Request, not including any payload (e.g. for POST).
// Next tag: 8
message HttpRequest {
  // True if the client was able to communicate to the server. False
  // if some error occurred below the HTTP protocol. Not relevent when
  // acting as an HTTP client.
  optional bool transport_succeeded = 1;

  optional string http_version = 2 [default = "1.1"];

  enum Method {
    GET = 0;
    PUT = 1;
    POST = 2;
    DELETE = 3;
  };
  optional Method method = 3;
  optional bool is_secure = 4;
  optional string hostname = 5;
  optional string path = 6;

  // Parameter keys and values should NOT be URI-encoded. This is
  // taken care of by the transport layer.
  repeated KeyValue query_parameters = 7;

  // No need to include "host" header, since host is already specified
  // above.
  repeated KeyValue request_headers = 8;
}

// Http Request, not including any payload.
// Next tag: 7
message HttpResponse {
  // True if the client was able to communicate to the server. False
  // if some error occurred below the HTTP protocol. Not relevent when
  // acting as an HTTP server.
  optional bool transport_succeeded = 1;

  optional string http_version = 2;
  optional bool is_secure = 3;

  optional int32 status_code = 4 [default = 200];
  optional string status_phrase = 5;

  repeated KeyValue response_headers = 6;
}
